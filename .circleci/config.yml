# Golang CircleCI 2.0 configuration file
version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/golang:1.12
        environment:
          GO111MODULE: "on"
          PORT: 8080
          DBPath: mongodb://127.0.0.1:27017/test_db
          HMACKEY: my_secret_key
          REDISURL: redis://127.0.0.1:6379
          ELASTICURL: http://127.0.0.1:9200
          TEST_RESULTS: /tmp/test-results # path to where test results will be saved

      - image: circleci/mongo:latest
      - image: circleci/redis:latest
        environment:
          REDIS_URL: "redis://127.0.0.1:6379"
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        environment:
          cluster.name: group-project-test-cluster
          xpack.security.enabled: false
          transport.host: localhost
          network.host: 127.0.0.1
          http.port: 9200
          discovery.type: single-node

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - run: go test -v ./tests
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run: #make # pull and build dependencies for the project
          name: Build
          command: |
            go build -o bin/Codephile .
            ./bin/Codephile
          background: true

      - run:
          name: Validate service is working
          command: curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results
workflows:
  version: 2
  build-workflow:
    jobs:
      - build